## @file
# PeiMain module is core module in PEI phase. It takes responsibilities of:
# 1) Initialize memory, PPI, image services etc, to establish PEIM runtime environment.
# 2) Dispatch PEIM from discovered FV.
# 3) Handoff control to DxeIpl to load DXE core and enter DXE phase.
#
# Copyright (c) 2006 - 2013, Intel Corporation. All rights reserved.<BR>
#
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution. The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#
#
##

[Defines]
  INF_VERSION                = 0x00010016
  BASE_NAME                  = PeiCore
  FILE_GUID                  = 52C05B14-0B98-496c-BC3B-04B50211D680
  MODULE_TYPE                = PEI_CORE
  VERSION_STRING             = 1.0

[Packages]
  MdePkg/MdePkg.dec
  MdeModulePkg/MdeModulePkg.dec

[Binaries.X64]
  PE32|PeiCore.efi

[PatchPcd.X64]
[Protocols.X64]
[Ppis.X64]
  ## SOMETIMES_CONSUMES (PeiReportStatusService is not ready if this PPI doesn't exist)
  gEfiPeiStatusCodePpiGuid

  ## SOMETIMES_CONSUMES (PeiResetService is not ready if this PPI doesn't exist)
  gEfiPeiResetPpiGuid

  ## CONSUMES
  gEfiDxeIplPpiGuid

  ## PRODUCES
  gEfiPeiMemoryDiscoveredPpiGuid

  ## CONSUMES
  gEfiPeiDecompressPpiGuid

  ## PRODUCES
  ## NOTIFY   ## SOMETIMES_PRODUCES (Produce FvInfoPpi if the encapsulated FvImage is found)
  gEfiPeiFirmwareVolumeInfoPpiGuid

  ## PRODUCES
  ## NOTIFY   ## SOMETIMES_PRODUCES (Produce FvInfo2Ppi if the encapsulated FvImage is found)
  gEfiPeiFirmwareVolumeInfo2PpiGuid

  ## PRODUCES ## SOMETIMES_CONSUMES (The default load PeImage logic will be used when this PPI doesn't exist)
  gEfiPeiLoadFilePpiGuid

  ## NOTIFY
  gEfiPeiSecurity2PpiGuid

  ## SOMETIMES_CONSUMES
  gEfiTemporaryRamSupportPpiGuid

  ## SOMETIMES_CONSUMES
  gEfiTemporaryRamDonePpiGuid

[Guids.X64]
  ## CONSUMES ## GUID
  gPeiAprioriFileNameGuid

  ## PRODUCES ## FV
  ## CONSUMES ## FV
  gEfiFirmwareFileSystem2Guid

  ## CONSUMES ## FV
  gEfiFirmwareFileSystem3Guid

  ## PRODUCES ## HOB
  gEfiHobMemoryAllocStackGuid

  ## PRODUCES ## HOB
  gEfiHobMemoryAllocBspStoreGuid

  ## PRODUCES ## HOB
  gEfiHobMemoryAllocModuleGuid

  ## CONSUMES
  gEfiStatusCodeSpecificDataGuid

  ## CONSUMES
  gEfiStatusCodeDataTypeDebugGuid

[PcdEx.X64]

## @AsBuilt
##   MSFT:RELEASE_VS2010x86_X64_SYMRENAME_FLAGS = Symbol renaming not needed for
##   MSFT:RELEASE_VS2010x86_X64_ASLDLINK_FLAGS = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE
##   MSFT:RELEASE_VS2010x86_X64_VFR_FLAGS = -l -n
##   MSFT:RELEASE_VS2010x86_X64_PP_FLAGS = /nologo /E /TC /FIAutoGen.h
##   MSFT:RELEASE_VS2010x86_X64_GENFW_FLAGS = 
##   MSFT:RELEASE_VS2010x86_X64_SLINK_FLAGS = /NOLOGO /LTCG
##   MSFT:RELEASE_VS2010x86_X64_ASM_FLAGS = /nologo /c /WX /W3 /Cx /Zd
##   MSFT:RELEASE_VS2010x86_X64_ASL_FLAGS = 
##   MSFT:RELEASE_VS2010x86_X64_CC_FLAGS = /nologo /c /WX /GS- /X /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /D MDEPKG_NDEBUG
##   MSFT:RELEASE_VS2010x86_X64_VFRPP_FLAGS = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
##   MSFT:RELEASE_VS2010x86_X64_ASLCC_FLAGS = /nologo /c /FIAutoGen.h /TC /Dmain=ReferenceAcpiTable
##   MSFT:RELEASE_VS2010x86_X64_APP_FLAGS = /nologo /E /TC
##   MSFT:RELEASE_VS2010x86_X64_OPTROM_FLAGS = -e
##   MSFT:RELEASE_VS2010x86_X64_DLINK_FLAGS = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.data=.text /MERGE:.rdata=.text
##   MSFT:RELEASE_VS2010x86_X64_ASLPP_FLAGS = /nologo /E /C /FIAutoGen.h
##   MSFT:RELEASE_VS2010x86_X64_OBJCOPY_FLAGS = objcopy not needed for
##   MSFT:RELEASE_VS2010x86_X64_MAKE_FLAGS = /nologo
##   MSFT:RELEASE_VS2010x86_X64_ASMLINK_FLAGS = /nologo /tiny
